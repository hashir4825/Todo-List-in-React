{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Hp\\\\Desktop\\\\To do List\\\\my-app\\\\src\\\\Components\\\\List.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst List = () => {\n  _s();\n  const [todos, setTodos] = useState([]);\n  const [todoInput, setTodoInput] = useState(\"\");\n  const style = {\n    spacing: {\n      margin: \"10px\",\n      width: \"600px\"\n    },\n    middle: {\n      minHeight: \"calc(86vh - 35px)\",\n      padding: \"10px\"\n    },\n    completed: {\n      textDecoration: \"line-through\"\n    }\n  };\n  const handleAddTodo = () => {\n    if (todoInput.trim() !== \"\") {\n      const newTodo = {\n        id: todos.length + 1,\n        description: todoInput.trim(),\n        check: false\n      };\n      setTodos([...todos, newTodo]);\n      setTodoInput(\"\");\n    } else {\n      alert(\"Please enter a todo\");\n    }\n  };\n\n  //below funcion is to reflect the change in the input field at runtime when the user types\n  const ChangeInputText = e => {\n    setTodoInput(e.target.value);\n  };\n  const handleToggleTodo = id => {\n    const updatedTodos = todos.map(todo =>\n    //If the id matches, it creates a new todo object { ...todo, completed: !todo.completed }, where completed is toggled to its opposite value (if completed was true, it becomes false, and vice versa). If the id doesn't match, it returns the original todo object.\n    todo.id === id ? {\n      ...todo,\n      check: !todo.check\n    } : todo\n    //in above code \" check: !todo.check\" means that if the check is true it becomes false and vice versa\n    );\n    setTodos(updatedTodos);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      ...style.spacing,\n      ...style.middle\n    },\n    className: \"mx-auto p-4 bg-white rounded-xl flex flex-col space-y-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-center text-xl font-medium\",\n      children: \"Todo List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter your todo\",\n        className: \"flex-grow border border-gray-300 rounded-md py-2 px-3 mr-4\",\n        value: todoInput,\n        onChange: ChangeInputText\n        // above ChangeInputText function is called to show input value is changed and is reflected in the input field at runtime and is stored in \"todoInput\" state variable\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"bg-purple-500 text-white px-4 py-2 rounded-md\",\n        onClick: handleAddTodo,\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: todos.map(myvalue => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: `flex items-center justify-between py-2 border-b border-gray-200 ${myvalue.check ? \"completed\" : \"\"\n        // above \"completed\" class,added to the list item, will add the line-through to the list\n        // and in below code the \"completed\" class,added to the span item,will add the line-through to the description\n        // it is necessary to add the \"completed\" class to both the span item and the list item because the line-through style needs to be applied to the description as well as on list item\n        }`,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"cursor-pointer\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            className: \"mr-4\",\n            checked: myvalue.check,\n            onChange: () => handleToggleTodo(myvalue.id)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            style: myvalue.check ? style.completed : {},\n            children: [myvalue.id, \" \", myvalue.description]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"bg-purple-500 text-white px-4 py-2 rounded-md\"\n          // onClick={handleAddTodo}\n          ,\n          children: \"Delete Item\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 13\n        }, this), \" \"]\n      }, myvalue.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n_s(List, \"LvL6N9HQmJNz3YalJWS1kvwdr4o=\");\n_c = List;\nexport default List;\nvar _c;\n$RefreshReg$(_c, \"List\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","List","_s","todos","setTodos","todoInput","setTodoInput","style","spacing","margin","width","middle","minHeight","padding","completed","textDecoration","handleAddTodo","trim","newTodo","id","length","description","check","alert","ChangeInputText","e","target","value","handleToggleTodo","updatedTodos","map","todo","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","onClick","myvalue","checked","_c","$RefreshReg$"],"sources":["C:/Users/Hp/Desktop/To do List/my-app/src/Components/List.js"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\nconst List = () => {\r\n  const [todos, setTodos] = useState([]);\r\n  const [todoInput, setTodoInput] = useState(\"\");\r\n\r\n  const style = {\r\n    spacing: {\r\n      margin: \"10px\",\r\n      width: \"600px\",\r\n    },\r\n    middle: {\r\n      minHeight: \"calc(86vh - 35px)\",\r\n      padding: \"10px\",\r\n    },\r\n    completed: {\r\n      textDecoration: \"line-through\",\r\n    },\r\n  };\r\n\r\n  const handleAddTodo = () => {\r\n    if (todoInput.trim() !== \"\") {\r\n      const newTodo = {\r\n        id: todos.length + 1,\r\n        description: todoInput.trim(),\r\n        check: false,\r\n      };\r\n      setTodos([...todos, newTodo]);\r\n      setTodoInput(\"\");\r\n    } else {\r\n      alert(\"Please enter a todo\");\r\n    }\r\n  };\r\n\r\n  //below funcion is to reflect the change in the input field at runtime when the user types\r\n  const ChangeInputText = (e) => {\r\n    setTodoInput(e.target.value);\r\n  };\r\n\r\n  const handleToggleTodo = (id) => {\r\n    const updatedTodos = todos.map(\r\n      (todo) =>\r\n        //If the id matches, it creates a new todo object { ...todo, completed: !todo.completed }, where completed is toggled to its opposite value (if completed was true, it becomes false, and vice versa). If the id doesn't match, it returns the original todo object.\r\n        todo.id === id ? { ...todo, check: !todo.check } : todo\r\n      //in above code \" check: !todo.check\" means that if the check is true it becomes false and vice versa\r\n    );\r\n    setTodos(updatedTodos);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      style={{ ...style.spacing, ...style.middle }}\r\n      className=\"mx-auto p-4 bg-white rounded-xl flex flex-col space-y-4\"\r\n    >\r\n      <h2 className=\"text-center text-xl font-medium\">Todo List</h2>\r\n      <div className=\"flex items-center\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Enter your todo\"\r\n          className=\"flex-grow border border-gray-300 rounded-md py-2 px-3 mr-4\"\r\n          value={todoInput}\r\n          onChange={ChangeInputText}\r\n          // above ChangeInputText function is called to show input value is changed and is reflected in the input field at runtime and is stored in \"todoInput\" state variable\r\n        />\r\n        <button\r\n          className=\"bg-purple-500 text-white px-4 py-2 rounded-md\"\r\n          onClick={handleAddTodo}\r\n        >\r\n          Add\r\n        </button>\r\n      </div>\r\n      <ul>\r\n        {todos.map((myvalue) => (\r\n          <li\r\n            key={myvalue.id}\r\n            className={`flex items-center justify-between py-2 border-b border-gray-200 ${\r\n              myvalue.check ? \"completed\" : \"\"\r\n              // above \"completed\" class,added to the list item, will add the line-through to the list\r\n              // and in below code the \"completed\" class,added to the span item,will add the line-through to the description\r\n              // it is necessary to add the \"completed\" class to both the span item and the list item because the line-through style needs to be applied to the description as well as on list item\r\n            }`}\r\n          >\r\n            <label className=\"cursor-pointer\">\r\n              <input\r\n                type=\"checkbox\"\r\n                className=\"mr-4\"\r\n                checked={myvalue.check}\r\n                onChange={() => handleToggleTodo(myvalue.id)}\r\n              />\r\n              <span style={myvalue.check ? style.completed : {}}>\r\n                {myvalue.id} {myvalue.description}\r\n              </span>\r\n            </label>\r\n            <button\r\n              className=\"bg-purple-500 text-white px-4 py-2 rounded-md\"\r\n              // onClick={handleAddTodo}\r\n            >\r\n              Delete Item\r\n            </button>{\" \"}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default List;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}