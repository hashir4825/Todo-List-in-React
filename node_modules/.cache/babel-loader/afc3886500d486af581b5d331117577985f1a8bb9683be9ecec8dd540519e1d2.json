{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Hp\\\\Desktop\\\\To do List\\\\my-app\\\\src\\\\Components\\\\List.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst List = () => {\n  _s();\n  const [todoInput, setTodoInput] = useState(\"\"); // Add this line to declare todoInput state\n\n  const storedTodos = localStorage.getItem(\"todos\");\n  let initialTodos = [];\n  if (storedTodos) {\n    initialTodos = JSON.parse(storedTodos);\n  }\n  const [todos, setTodos] = useState(initialTodos);\n  const style = {\n    spacing: {\n      margin: \"10px\",\n      width: \"600px\"\n    },\n    middle: {\n      minHeight: \"calc(86vh - 35px)\",\n      padding: \"10px\"\n    },\n    completed: {\n      textDecoration: \"line-through\"\n    },\n    clr: {\n      backgroundColor: \"#eb5c08d1\"\n    }\n  };\n  const handleAddTodo = () => {\n    if (todoInput.trim() !== \"\") {\n      const newTodo = {\n        id: todos.length + 1,\n        description: todoInput.trim(),\n        check: false\n      };\n      setTodos([...todos, newTodo]);\n      setTodoInput(\"\");\n      localStorage.setItem(\"todos\", JSON.stringify([...todos, newTodo]));\n    } else {\n      alert(\"Please enter a todo\");\n    }\n  };\n  const DeleteTodo = id => {\n    const updatedTodos = todos.filter(todo => todo.id !== id);\n    const reindexedTodos = updatedTodos.map((todo, index) => ({\n      ...todo,\n      id: index + 1\n    }));\n    setTodos(reindexedTodos);\n    localStorage.setItem(\"todos\", JSON.stringify(reindexedTodos));\n  };\n\n  // const handleAddTodo = () => {\n  //   if (todoInput.trim() !== \"\") {\n  //     const newTodo = {\n  //       id: todos.length + 1,\n  //       description: todoInput.trim(),\n  //       check: false,\n  //     };\n  //     setTodos([...todos, newTodo]);\n  //     setTodoInput(\"\");\n  //   } else {\n  //     alert(\"Please enter a todo\");\n  //   }\n  // };\n\n  const ChangeInputText = e => {\n    setTodoInput(e.target.value);\n  };\n  const handleToggleTodo = id => {\n    const updatedTodos = todos.map(todo => todo.id === id ? {\n      ...todo,\n      check: !todo.check\n    } : todo);\n    setTodos(updatedTodos);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      ...style.spacing,\n      ...style.middle\n    },\n    className: \"mx-auto p-4 bg-white rounded-xl d-flex flex-column space-y-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-center\",\n      children: \"Todo List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex align-items-center my-4 mx-auto\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter your todo\",\n        className: \"flex-grow border border-gray-300 rounded-md py-2 px-3 mr-4\",\n        value: todoInput,\n        onChange: ChangeInputText\n        // above ChangeInputText function is called to show input value is changed and is reflected in the input field at runtime and is stored in \"todoInput\" state variable\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        style: style.clr,\n        className: \"btn btn-primary px-4 py-2 rounded-md mx-3\",\n        onClick: handleAddTodo,\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"list-group\",\n      children: todos.map(myvalue => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: `list-group-item d-flex justify-content-between align-items-center border-bottom ${myvalue.check ? \"completed\" : \"\"\n        // above \"completed\" class,added to the list item, will add the line-through to the list\n        // and in below code the \"completed\" class,added to the span item,will add the line-through to the description\n        // it is necessary to add the \"completed\" class to both the span item and the list item because the line-through style needs to be applied to the description as well as on list item\n        }`,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"cursor-pointer\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            className: \"mr-4 mx-3\",\n            checked: myvalue.check,\n            onChange: () => handleToggleTodo(myvalue.id)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            style: myvalue.check ? style.completed : {},\n            children: [myvalue.id, \" \", myvalue.description]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          style: style.clr,\n          className: \"btn btn-danger px-4 py-2 rounded-md\",\n          onClick: () => DeleteTodo(myvalue.id),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 13\n        }, this)]\n      }, myvalue.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n};\n_s(List, \"2ru4SazcCuJ1aySAbZhGu+wFvDU=\");\n_c = List;\nexport default List;\nvar _c;\n$RefreshReg$(_c, \"List\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","List","_s","todoInput","setTodoInput","storedTodos","localStorage","getItem","initialTodos","JSON","parse","todos","setTodos","style","spacing","margin","width","middle","minHeight","padding","completed","textDecoration","clr","backgroundColor","handleAddTodo","trim","newTodo","id","length","description","check","setItem","stringify","alert","DeleteTodo","updatedTodos","filter","todo","reindexedTodos","map","index","ChangeInputText","e","target","value","handleToggleTodo","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","onClick","myvalue","checked","_c","$RefreshReg$"],"sources":["C:/Users/Hp/Desktop/To do List/my-app/src/Components/List.js"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\nconst List = () => {\r\n  const [todoInput, setTodoInput] = useState(\"\"); // Add this line to declare todoInput state\r\n\r\n  const storedTodos = localStorage.getItem(\"todos\");\r\n  let initialTodos = [];\r\n  if (storedTodos) {\r\n    initialTodos = JSON.parse(storedTodos);\r\n  }\r\n\r\n  const [todos, setTodos] = useState(initialTodos);\r\n  const style = {\r\n    spacing: {\r\n      margin: \"10px\",\r\n      width: \"600px\",\r\n    },\r\n    middle: {\r\n      minHeight: \"calc(86vh - 35px)\",\r\n      padding: \"10px\",\r\n    },\r\n    completed: {\r\n      textDecoration: \"line-through\",\r\n    },\r\n    clr: {\r\n      backgroundColor: \"#eb5c08d1\",\r\n    },\r\n  };\r\n  const handleAddTodo = () => {\r\n    if (todoInput.trim() !== \"\") {\r\n      const newTodo = {\r\n        id: todos.length + 1,\r\n        description: todoInput.trim(),\r\n        check: false,\r\n      };\r\n      setTodos([...todos, newTodo]);\r\n      setTodoInput(\"\");\r\n      localStorage.setItem(\"todos\", JSON.stringify([...todos, newTodo]));\r\n    } else {\r\n      alert(\"Please enter a todo\");\r\n    }\r\n  };\r\n\r\n  const DeleteTodo = (id) => {\r\n    const updatedTodos = todos.filter((todo) => todo.id !== id);\r\n    const reindexedTodos = updatedTodos.map((todo, index) => ({\r\n      ...todo,\r\n      id: index + 1,\r\n    }));\r\n    setTodos(reindexedTodos);\r\n    localStorage.setItem(\"todos\", JSON.stringify(reindexedTodos));\r\n  };\r\n\r\n  // const handleAddTodo = () => {\r\n  //   if (todoInput.trim() !== \"\") {\r\n  //     const newTodo = {\r\n  //       id: todos.length + 1,\r\n  //       description: todoInput.trim(),\r\n  //       check: false,\r\n  //     };\r\n  //     setTodos([...todos, newTodo]);\r\n  //     setTodoInput(\"\");\r\n  //   } else {\r\n  //     alert(\"Please enter a todo\");\r\n  //   }\r\n  // };\r\n\r\n  const ChangeInputText = (e) => {\r\n    setTodoInput(e.target.value);\r\n  };\r\n\r\n  const handleToggleTodo = (id) => {\r\n    const updatedTodos = todos.map((todo) =>\r\n      todo.id === id ? { ...todo, check: !todo.check } : todo\r\n    );\r\n    setTodos(updatedTodos);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      style={{ ...style.spacing, ...style.middle }}\r\n      className=\"mx-auto p-4 bg-white rounded-xl d-flex flex-column space-y-4\"\r\n    >\r\n      <h2 className=\"text-center\">Todo List</h2>\r\n      <div className=\"d-flex align-items-center my-4 mx-auto\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Enter your todo\"\r\n          className=\"flex-grow border border-gray-300 rounded-md py-2 px-3 mr-4\"\r\n          value={todoInput}\r\n          onChange={ChangeInputText}\r\n          // above ChangeInputText function is called to show input value is changed and is reflected in the input field at runtime and is stored in \"todoInput\" state variable\r\n        />\r\n        <button\r\n          style={style.clr}\r\n          className=\"btn btn-primary px-4 py-2 rounded-md mx-3\"\r\n          onClick={handleAddTodo}\r\n        >\r\n          Add\r\n        </button>\r\n      </div>\r\n      <ul className=\"list-group\">\r\n        {todos.map((myvalue) => (\r\n          <li\r\n            key={myvalue.id}\r\n            className={`list-group-item d-flex justify-content-between align-items-center border-bottom ${\r\n              myvalue.check ? \"completed\" : \"\"\r\n              // above \"completed\" class,added to the list item, will add the line-through to the list\r\n              // and in below code the \"completed\" class,added to the span item,will add the line-through to the description\r\n              // it is necessary to add the \"completed\" class to both the span item and the list item because the line-through style needs to be applied to the description as well as on list item\r\n            }`}\r\n          >\r\n            <label className=\"cursor-pointer\">\r\n              <input\r\n                type=\"checkbox\"\r\n                className=\"mr-4 mx-3\"\r\n                checked={myvalue.check}\r\n                onChange={() => handleToggleTodo(myvalue.id)}\r\n              />\r\n              <span style={myvalue.check ? style.completed : {}}>\r\n                {myvalue.id} {myvalue.description}\r\n              </span>\r\n            </label>\r\n            <button\r\n              style={style.clr}\r\n              className=\"btn btn-danger px-4 py-2 rounded-md\"\r\n              onClick={() => DeleteTodo(myvalue.id)}\r\n            >\r\n              Delete\r\n            </button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default List;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}