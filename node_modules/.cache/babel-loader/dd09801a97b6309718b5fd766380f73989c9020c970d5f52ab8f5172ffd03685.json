{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Hp\\\\Desktop\\\\To do List\\\\my-app\\\\src\\\\App.js\";\nimport React, { useState, useEffect } from \"react\";\nimport Header from \"./Components/Header\";\nimport List from \"./Components/List\";\nimport Info from \"./Components/Info\";\nimport Footer from \"./Components/Footer\";\nimport About from \"./Components/About\";\nimport Home from \"./Components/Home\";\nimport { BrowserRouter as Router, Routes,\n// Use Routes instead of Switch\nRoute } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  // when the app starts, it checks whether there are any todos stored in the local storage. If there are, it retrieves them and sets them as the initial state of the todos. If there are no todos stored in the local storage, it sets an empty array as the initial state of the todos.\n  // above procedure can also be done here but it is done in the List.js file\n\n  // const storedTodos = localStorage.getItem('todos');\n  // const initialTodos = storedTodos ? JSON.parse(storedTodos) : [];\n\n  // const storedTodos = localStorage.getItem(\"todos\");\n  // let initialTodos = [];\n  // if (storedTodos) {\n  //   initialTodos = JSON.parse(storedTodos);\n  // }\n\n  // const [todos, setTodos] = useState(initialTodos);\n\n  // useEffect(() => {\n  //   localStorage.setItem(\"todos\", JSON.stringify(todos));\n  // }, [todos]);\n\n  // to do above procedure in this file, we need to pass the \"todos\" and \"setTodos\" as props to the List.js file\n\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Routes, {\n      children: [\" \", /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/List\",\n        element: /*#__PURE__*/_jsxDEV(List, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 20\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/Info\",\n        element: /*#__PURE__*/_jsxDEV(Info, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 38\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/About\",\n        element: /*#__PURE__*/_jsxDEV(About, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 39\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Header","List","Info","Footer","About","Home","BrowserRouter","Router","Routes","Route","jsxDEV","_jsxDEV","App","children","fileName","_jsxFileName","lineNumber","columnNumber","path","element","_c","$RefreshReg$"],"sources":["C:/Users/Hp/Desktop/To do List/my-app/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Header from \"./Components/Header\";\nimport List from \"./Components/List\";\nimport Info from \"./Components/Info\";\nimport Footer from \"./Components/Footer\";\nimport About from \"./Components/About\";\nimport Home from \"./Components/Home\";\nimport {\n  BrowserRouter as Router,\n  Routes, // Use Routes instead of Switch\n  Route,\n} from \"react-router-dom\";\n\nfunction App() {\n\n  // when the app starts, it checks whether there are any todos stored in the local storage. If there are, it retrieves them and sets them as the initial state of the todos. If there are no todos stored in the local storage, it sets an empty array as the initial state of the todos.\n  // above procedure can also be done here but it is done in the List.js file\n\n  // const storedTodos = localStorage.getItem('todos');\n  // const initialTodos = storedTodos ? JSON.parse(storedTodos) : [];\n\n  // const storedTodos = localStorage.getItem(\"todos\");\n  // let initialTodos = [];\n  // if (storedTodos) {\n  //   initialTodos = JSON.parse(storedTodos);\n  // }\n\n  // const [todos, setTodos] = useState(initialTodos);\n\n  // useEffect(() => {\n  //   localStorage.setItem(\"todos\", JSON.stringify(todos));\n  // }, [todos]);\n\n\n  // to do above procedure in this file, we need to pass the \"todos\" and \"setTodos\" as props to the List.js file\n\n  return (\n    <Router>\n      <Header />\n\n      <Routes>\n        {\" \"}\n        {/* Use Routes instead of Switch */}\n        <Route\n          path=\"/List\"\n          element={<List  />}\n        />\n        <Route path=\"/\" element={<Home />} />\n        <Route path=\"/Info\" element={<Info />} />\n        <Route path=\"/About\" element={<About />} />\n      </Routes>\n\n      <Footer />\n    </Router>\n  );\n}\n\nexport default App;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,IAAI,MAAM,mBAAmB;AACpC,OAAOC,IAAI,MAAM,mBAAmB;AACpC,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,KAAK,MAAM,oBAAoB;AACtC,OAAOC,IAAI,MAAM,mBAAmB;AACpC,SACEC,aAAa,IAAIC,MAAM,EACvBC,MAAM;AAAE;AACRC,KAAK,QACA,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,GAAGA,CAAA,EAAG;EAEb;EACA;;EAEA;EACA;;EAEA;EACA;EACA;EACA;EACA;;EAEA;;EAEA;EACA;EACA;;EAGA;;EAEA,oBACED,OAAA,CAACJ,MAAM;IAAAM,QAAA,gBACLF,OAAA,CAACX,MAAM;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAEVN,OAAA,CAACH,MAAM;MAAAK,QAAA,GACJ,GAAG,eAEJF,OAAA,CAACF,KAAK;QACJS,IAAI,EAAC,OAAO;QACZC,OAAO,eAAER,OAAA,CAACV,IAAI;UAAAa,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACpB,CAAC,eACFN,OAAA,CAACF,KAAK;QAACS,IAAI,EAAC,GAAG;QAACC,OAAO,eAAER,OAAA,CAACN,IAAI;UAAAS,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACrCN,OAAA,CAACF,KAAK;QAACS,IAAI,EAAC,OAAO;QAACC,OAAO,eAAER,OAAA,CAACT,IAAI;UAAAY,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACzCN,OAAA,CAACF,KAAK;QAACS,IAAI,EAAC,QAAQ;QAACC,OAAO,eAAER,OAAA,CAACP,KAAK;UAAAU,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrC,CAAC,eAETN,OAAA,CAACR,MAAM;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEb;AAACG,EAAA,GA1CQR,GAAG;AA4CZ,eAAeA,GAAG;AAAC,IAAAQ,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}